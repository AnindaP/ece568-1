#Nayantara Prem, 998698351, tara.prem@mail.utoronto.ca
#Tahia Khan, 998897216, tahia.khan@mail.utoronto.ca

client.c
===============================================================================
First the client calls initialize_ctx() to set up the SSL context. It then sets SSL communication to SSLv3/TLSv1 and encryption to SHA1. Once a TCP connection is established (this code was left unchanged), the SSL handshake initiates and the client and server exchange and verify each other's key pair and CA. If this occurs successfully, the client calls check_cert() which verifies the common name and email of the server. If any errors are encountered during this process an error
message is emitted and the connection is closed. Otherwise, the server_req_res() method handles the rest of the connection with calls to SSL_write() and then SSL_read(). Premature shutdown is handled in server_req_res() as well, which checks for various error cases using SSL_get_error(). In the end the SSL context is destroyed and the connection is closed.

server.c
===============================================================================
- initialize_ctx(), 
ctx=initialize_ctx(SERVER_KEY, "password");
/* Support ciphers in SSLv2, SSLv3 and TLSv1 */
SSL_CTX_set_cipher_list(ctx, "SSLv2:SSLv3:TLSv1");
/* Only communicate if client has valid certs */
SSL_CTX_set_verify(ctx,SSL_VERIFY_PEER | SSL_VERIFY_FAIL_IF_NO_PEER_CERT, 0);

- tcp connection  (code unchanged)
- initiate ssl handshare SSL_accept()
- call http_serve(), which calls SSL_read to accept client req and then SSL_write to respond to client. also handles error/premature shutdown
- in the end close SSL context and connection

